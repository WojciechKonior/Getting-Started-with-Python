!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/wkonior/Projects/programmingTrainings/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
CHECK	some-task/cpp-coding-test/Test/Test.cpp	/^#define CHECK(/;"	d	file:
CH_DIR	Makefile	/^CH_DIR=.\/cherno-cpp-trainings$/;"	m
FALSE	LinkedInTrainings/NetworkProgrammingInC/chat_server.c	/^#define FALSE /;"	d	file:
Hierarchy	some-task/cpp-coding-test/Test/Test.cpp	/^class Hierarchy$/;"	c	file:
LoadFromFile	some-task/cpp-coding-test/Test/Test.cpp	/^    bool LoadFromFile(const std::string &infile)$/;"	f	class:Hierarchy	typeref:typename:bool	file:
Node	some-task/cpp-coding-test/Test/Test.cpp	/^struct Node$/;"	s	file:
PrintHierarchyBreadthFirst	some-task/cpp-coding-test/Test/Test.cpp	/^void PrintHierarchyBreadthFirst(const Hierarchy &h, std::ostream &output)$/;"	f	typeref:typename:void
PrintHierarchyDepthFirst	some-task/cpp-coding-test/Test/Test.cpp	/^void PrintHierarchyDepthFirst(const Hierarchy &h, std::ostream &output)$/;"	f	typeref:typename:void
PrintHierarchyDepthFirstSorted	some-task/cpp-coding-test/Test/Test.cpp	/^void PrintHierarchyDepthFirstSorted(const Hierarchy &h, std::ostream &output)$/;"	f	typeref:typename:void
ReadFileAsString	cherno-cpp-trainings/optionalData.cpp	/^std::optional<std::string> ReadFileAsString(const std::string& filepath)$/;"	f	typeref:typename:std::optional<std::string>
Sorted	some-task/cpp-coding-test/Test/Test.cpp	/^    Sorted = 1$/;"	e	enum:__anon368738880103	file:
TRUE	LinkedInTrainings/NetworkProgrammingInC/chat_server.c	/^#define TRUE /;"	d	file:
TestHierarchy	some-task/cpp-coding-test/Test/Test.cpp	/^void TestHierarchy(std::ostream &error_output)$/;"	f	typeref:typename:void
Unsorted	some-task/cpp-coding-test/Test/Test.cpp	/^    Unsorted = 0,$/;"	e	enum:__anon368738880103	file:
__anon368738880103	some-task/cpp-coding-test/Test/Test.cpp	/^{$/;"	g	file:
__anon368738880202	some-task/cpp-coding-test/Test/Test.cpp	/^        [](const Node& lhs, const Node& rhs) {$/;"	f	function:print	file:
__anon506c000e0102	cherno-cpp-trainings/async.cpp	/^    std::future<void> a = std::async(std::launch::async, []()->void{int a = 10;});$/;"	f	function:main	typeref:typename:void	file:
_pHierarchy	some-task/cpp-coding-test/Test/Test.cpp	/^    std::vector<Node> _pHierarchy;$/;"	m	class:Hierarchy	typeref:typename:std::vector<Node>	file:
all	lets-code-linux-driver/1_hello_world/Makefile	/^all:$/;"	t
chat_serv	LinkedInTrainings/NetworkProgrammingInC/Makefile	/^chat_serv:$/;"	t
children	some-task/cpp-coding-test/Test/Test.cpp	/^    std::vector<Node> children;$/;"	m	struct:Node	typeref:typename:std::vector<Node>	file:
clean	Makefile	/^clean:$/;"	t
clean	lets-code-linux-driver/1_hello_world/Makefile	/^clean:$/;"	t
clean	some-task/cpp-coding-test/Test/Makefile	/^clean:$/;"	t
data_location	some-task/cpp-coding-test/Test/Test.cpp	/^const std::string data_location("..\/Data\/");$/;"	v	typeref:typename:const std::string
do_something	cherno-cpp-trainings/async.cpp	/^void do_something(std::vector<int>& vec)$/;"	f	typeref:typename:void
dual_stack_tcp_serv	LinkedInTrainings/NetworkProgrammingInC/Makefile	/^dual_stack_tcp_serv:$/;"	t
errval	lets-code-linux-driver/1_hello_world/mymodule.c	/^static int errval = 0;$/;"	v	typeref:typename:int	file:
getHierarchy	some-task/cpp-coding-test/Test/Test.cpp	/^    std::vector<Node> getHierarchy() const { return _pHierarchy; }$/;"	f	class:Hierarchy	typeref:typename:std::vector<Node>	file:
gethostdetails	LinkedInTrainings/NetworkProgrammingInC/Makefile	/^gethostdetails:$/;"	t
insertNode	some-task/cpp-coding-test/Test/Test.cpp	/^    void insertNode(std::string line, std::vector<Node> &hierarchy)$/;"	f	class:Hierarchy	typeref:typename:void	file:
main	LinkedInTrainings/NetworkProgrammingInC/chat_server.c	/^int main()$/;"	f	typeref:typename:int
main	LinkedInTrainings/NetworkProgrammingInC/dual_stack_tcp_server.c	/^int main()$/;"	f	typeref:typename:int
main	LinkedInTrainings/NetworkProgrammingInC/gethostdetails.c	/^int main()$/;"	f	typeref:typename:int
main	LinkedInTrainings/NetworkProgrammingInC/tcp_client.c	/^int main()$/;"	f	typeref:typename:int
main	LinkedInTrainings/NetworkProgrammingInC/tcp_server.c	/^int main()$/;"	f	typeref:typename:int
main	LinkedInTrainings/NetworkProgrammingInC/udp_server.c	/^int main()$/;"	f	typeref:typename:int
main	cherno-cpp-trainings/async.cpp	/^int main()$/;"	f	typeref:typename:int
main	cherno-cpp-trainings/fstream.cpp	/^int main()$/;"	f	typeref:typename:int
main	cherno-cpp-trainings/networking.cpp	/^int main() {$/;"	f	typeref:typename:int
main	cherno-cpp-trainings/optionalData.cpp	/^int main()$/;"	f	typeref:typename:int
main	cherno-cpp-trainings/pointers.cpp	/^int main()$/;"	f	typeref:typename:int
main	some-task/cpp-coding-test/Test/Test.cpp	/^int main()$/;"	f	typeref:typename:int
mtx	cherno-cpp-trainings/async.cpp	/^std::mutex mtx;$/;"	v	typeref:typename:std::mutex
my_cleanup_func	lets-code-linux-driver/1_hello_world/mymodule.c	/^void my_cleanup_func(void) { $/;"	f	typeref:typename:void
my_init_func	lets-code-linux-driver/1_hello_world/mymodule.c	/^int my_init_func(void) {$/;"	f	typeref:typename:int
networking	Makefile	/^networking:$/;"	t
operator <<	cherno-cpp-trainings/async.cpp	/^std::ostream &operator<<(std::ostream &os, const std::vector<T> &vec)$/;"	f	typeref:typename:std::ostream &
parent	some-task/cpp-coding-test/Test/Test.cpp	/^    std::string parent;$/;"	m	struct:Node	typeref:typename:std::string	file:
pointers	Makefile	/^pointers:$/;"	t
print	some-task/cpp-coding-test/Test/Test.cpp	/^void print(std::vector<Node> hierarchy, int level, std::ostream &output, int sorted = Unsorted)$/;"	f	typeref:typename:void
printNextBreadth	some-task/cpp-coding-test/Test/Test.cpp	/^void printNextBreadth(std::vector<Node> hierarchy, int level, std::ostream &output, std::map<int/;"	f	typeref:typename:void
tcp_client	LinkedInTrainings/NetworkProgrammingInC/Makefile	/^tcp_client:$/;"	t
tcp_serv	LinkedInTrainings/NetworkProgrammingInC/Makefile	/^tcp_serv:$/;"	t
test	some-task/cpp-coding-test/Test/Makefile	/^test: Test$/;"	t
to_bin	cherno-cpp-trainings/pointers.cpp	/^std::string to_bin(const T &num)$/;"	f	typeref:typename:std::string
udp_serv	LinkedInTrainings/NetworkProgrammingInC/Makefile	/^udp_serv:$/;"	t
